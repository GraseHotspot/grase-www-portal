#!/bin/bash

# Backup DB
#

radius_sql_password=$(cat /etc/grase/radius.conf |grep sql_password|cut -f 2 -d :|cut -f 2 -d ' '|head -n 1)
radius_sql_username=$(cat /etc/grase/radius.conf |grep sql_username|cut -f 2 -d :|cut -f 2 -d ' '|head -n 1)
radius_sql_server=$(cat /etc/grase/radius.conf |grep sql_server|cut -f 2 -d :|cut -f 2 -d ' '|head -n 1)
radius_sql_database=$(cat /etc/grase/radius.conf |grep sql_database|cut -f 2 -d :|cut -f 2 -d ' '|head -n 1)

radmin_sql_password=$(cat /etc/grase/radmin.conf |grep sql_password|cut -f 2 -d :|cut -f 2 -d ' '|head -n 1)
radmin_sql_username=$(cat /etc/grase/radmin.conf |grep sql_username|cut -f 2 -d :|cut -f 2 -d ' '|head -n 1)
radmin_sql_server=$(cat /etc/grase/radmin.conf |grep sql_server|cut -f 2 -d :|cut -f 2 -d ' '|head -n 1)
radmin_sql_database=$(cat /etc/grase/radmin.conf |grep sql_radmindatabase|cut -f 2 -d :|cut -f 2 -d ' '|head -n 1)


if [ -n "$radius_sql_password" ]; then radius_sql_password="-p$radius_sql_password"; fi
if [ -n "$radmin_sql_password" ]; then radmin_sql_password="-p$radmin_sql_password"; fi

backup_dir="/var/backups/grase/database/"
mkdir -p $backup_dir

cd $backup_dir

radius_backup_file="mysql_radius_backup_`date +%Y%m%d`.sql"
radmin_backup_file="mysql_radmin_backup_`date +%Y%m%d`.sql"
backup_file="backup_`date +%Y%m%d`.tgz"

mysqldump --force -h $radius_sql_server -u $radius_sql_username $radius_sql_password $radius_sql_database -r $radius_backup_file
mysqldump --force -h $radmin_sql_server -u $radmin_sql_username $radmin_sql_password $radmin_sql_database -r $radmin_backup_file

tar -zcvf $backup_file $radius_backup_file $radmin_backup_file && rm $radius_backup_file $radmin_backup_file
#gzip -f -9 $backup_dir$backup_file
#compressed_backup_file="$backup_file.gz"

#location=$(cat /var/www/radmin/configs/site_settings/location)
MAC=$(ifconfig | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'|tr -d ":"| sed 's/0*//'| head -n1)
#SELECT value FROM settings WHERE setting = 'locationName';
location=$(echo "SELECT value FROM settings WHERE setting = 'locationName';" | mysql  -h $radmin_sql_server -u $radmin_sql_username $radmin_sql_password $radmin_sql_database -s)
hostname=$(hostname)


# TODO: Make offsite backups an option in admin interface (we already have root to read database, so can easily extract required settings)
#(cat << EOM
#To: ### BACKUP EMAIL
#Subject: GRASE DB Backup `date +%Y%m%d` ($location - $hostname$MAC)
#MIME-Version: 1.0
#Content-Disposition: attachment; filename=$backup_file
#Content-Type: application/x-gzip; name=$backup_file
#Content-Transfer-Encoding: base64
#
#EOM
#base64 $backup_file ) | sendmail ### BACKUP EMAIL

# TODO Offsite backups to s3cmd
# As we are in the backup_dir, we can use the sync command to make sure the files are correctly uploaded, only new files will be uploaded
# s3cmd sync ./ $s3bucket
